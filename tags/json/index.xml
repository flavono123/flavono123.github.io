<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>json on flavono123</title><link>https://flavono123.github.io/tags/json/</link><description>Recent content in json on flavono123</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 21 Jun 2022 18:46:55 +0900</lastBuildDate><atom:link href="https://flavono123.github.io/tags/json/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubectl Patch</title><link>https://flavono123.github.io/posts/kubectl-json-patch-merge/</link><pubDate>Tue, 21 Jun 2022 18:46:55 +0900</pubDate><guid>https://flavono123.github.io/posts/kubectl-json-patch-merge/</guid><description>JSON Patch kubectl patch 서브명령은 바꿀 JSON을 인자로 실행 중인 객체의 정의를 바꾼다. edit 보다 편하기도, 또 누군가에게 설명하기 쉬운 경우도 많다.
하지만 인라인으로 쓰인 patch 인자가 복잡해 보일 때도 있다. 이때 보다 나은, JSON Patch를 사용할 수 있다:
$ k run patch-test --image busybox -- sleep 1d pod/patch-test created # k label po patch-test test=true 와 같다 $ k patch po patch-test --type json \ -p &amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;add&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/metadata/labels/test&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;true&amp;#34;}]&amp;#39; pod/patch-test patched $ k get po -l test=true NAME READY STATUS RESTARTS AGE patch-test 1/1 Running 0 108s Patch할 JSON에 여러 변경사항(연산)을 인자로 쓸 수 있지만, 하날 쓰더라도 무조건 배열에 담아 보내야 하는 것을 주의하자.</description></item></channel></rss>