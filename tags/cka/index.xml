<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cka on flavono123</title><link>https://flavono123.github.io/tags/cka/</link><description>Recent content in cka on flavono123</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 25 Feb 2022 18:24:34 +0900</lastBuildDate><atom:link href="https://flavono123.github.io/tags/cka/index.xml" rel="self" type="application/rss+xml"/><item><title>CKA 시험 후기와 시큐리티 - 리눅스 네임스페이스, capabilities</title><link>https://flavono123.github.io/posts/cka-security-context/</link><pubDate>Fri, 25 Feb 2022 18:24:34 +0900</pubDate><guid>https://flavono123.github.io/posts/cka-security-context/</guid><description>이전까지 쓰던 CKA 강의 정리 글을 중단하고, 남은 섹션 빠르게 공부한 후, 합격했다&amp;hellip;
인터넷에 보면 시험 (합격)후기 글이 많다. 시험 팁과 관련된 내용이 주로 있고 나도 그런 글 도움을 많이 받았다. 하지만 나는 조금 다른 이야길 해보려 한다.
우선 강의와 더불어 시험을 보는 과정에서 배우는 것들이 좋았다. 어찌보면 난 컨테이너(도커)는 아주 깔짝, 리눅스도 깔짝 알고 있는 수준이었다는게 드러났다. 예컨데 나는 리눅스 네트워크는 꽤 잘 안다고 착각했다. 이유는 (지금 생각하면 조금 어이 없지만) on-premise 호스트에서 DHCP를 쓰지 않고 정적으로 IP를 할당했기 때문에 그렇다고 생각했다.</description></item><item><title>CKA with Practice Tests: Logging &amp; Monitoring(+ Prometheus, Grafana)</title><link>https://flavono123.github.io/posts/cka-4-logging-monitoring/</link><pubDate>Tue, 25 Jan 2022 17:33:38 +0900</pubDate><guid>https://flavono123.github.io/posts/cka-4-logging-monitoring/</guid><description>클러스터 컴포넌트 모니터 모니터 대상은 크게 노드와 파드 두개로 나뉜다. 기본적인 메트릭 API 있다. 이를 집계하려면 별도의 메트릭 서버가 필요하다.
먼저 로컬에 구성한 minikube의 경우 metrics-server를 애드온으로 추가하면 kubectl top 명령으로 CPU와 메모리 사용량을 알 수 있다.
❯ minikube version minikube version: v1.24.0 commit: 76b94fb3c4e8ac5062daf70d60cf03ddcc0a741b ❯ minikube addons enable metrics-server ▪ Using image k8s.gcr.io/metrics-server/metrics-server:v0.4.2 🌟 &amp;#39;metrics-server&amp;#39; 애드온이 활성화되었습니다 ❯ minikube addons list |-----------------------------|----------|--------------|-----------------------| | ADDON NAME | PROFILE | STATUS | MAINTAINER | |-----------------------------|----------|--------------|-----------------------| | ambassador | minikube | disabled | unknown (third-party) | | auto-pause | minikube | disabled | google | | csi-hostpath-driver | minikube | disabled | kubernetes | | dashboard | minikube | disabled | kubernetes | | default-storageclass | minikube | enabled ✅ | kubernetes | | efk | minikube | disabled | unknown (third-party) | | freshpod | minikube | disabled | google | | gcp-auth | minikube | disabled | google | | gvisor | minikube | disabled | google | | helm-tiller | minikube | disabled | unknown (third-party) | | ingress | minikube | disabled | unknown (third-party) | | ingress-dns | minikube | disabled | unknown (third-party) | | istio | minikube | disabled | unknown (third-party) | | istio-provisioner | minikube | disabled | unknown (third-party) | | kubevirt | minikube | disabled | unknown (third-party) | | logviewer | minikube | disabled | google | | metallb | minikube | disabled | unknown (third-party) | | metrics-server | minikube | enabled ✅ | kubernetes | | nvidia-driver-installer | minikube | disabled | google | | nvidia-gpu-device-plugin | minikube | disabled | unknown (third-party) | | olm | minikube | disabled | unknown (third-party) | | pod-security-policy | minikube | disabled | unknown (third-party) | | portainer | minikube | disabled | portainer.</description></item><item><title>CKA with Practice Tests 정리: Scheduler</title><link>https://flavono123.github.io/posts/cka-3-scheduler/</link><pubDate>Sun, 23 Jan 2022 13:21:29 +0900</pubDate><guid>https://flavono123.github.io/posts/cka-3-scheduler/</guid><description>Manage scheduling 스케줄러는 파드를 어떤 노드에 할당(bind)할지 판단한다. 지금까지 파드 생성 시 정의에 명시하지 않았지만, spec.nodeName에 할당할 파드를 명시할 수 있다. 이런 방법은 추천하지 않는것 같고, 스케줄러에게 맡기되 그걸 제어할 수 있는 방법을 이번 장에서 다룬다.
스케줄러는 core Binding API(target.kind: Node)를 이용해 특정 노드에 파드 할당을 요청한다.
스케줄러는 컨트롤플레인 노드에서, 뒤에서 설명할, 스태틱 파드로 실행중이다:
❯ kubectl describe po kube-scheduler-minikube -n kube-system | grep Controlled Controlled By: Node/minikube 레이블 &amp;amp; 셀렉터 레이블: 쿠버네티스 오브젝트를 특정하기 위한 태그.</description></item><item><title>CKA with Practice Tests 정리: Core Concepts</title><link>https://flavono123.github.io/posts/cka-2-core-concept/</link><pubDate>Sat, 15 Jan 2022 17:09:34 +0900</pubDate><guid>https://flavono123.github.io/posts/cka-2-core-concept/</guid><description>쿠버네티스에 대한 관심이 생기며 CKA란 자격증도 알게 됐다. 원랜 개발 관련한 자격증은 막연한 편견이 있었다. 실무와 거리가 멀것만 같은&amp;hellip; 하지만 시험이 프롬프트를 통해 쿠버네티스 상태를 만든다는 점에서 그런 편견이 깨졌다. 무엇보다 회사에서 아직 쿠버네티스를 쓰지 않으니 배울 수 있는 좋은 기회인거 같아 자격증 준비를 시작했다.
아주 유명한 Udemy 강의인 Certified Kubernetes Administrator (CKA) with Practice Tests를 듣고 있다. 강의를 들은 후 섹션별로 내용을 정리할 계획이다.
쿠버네티스 문서화가 잘 되어 있고 한글 번역된것도 많다.</description></item></channel></rss>